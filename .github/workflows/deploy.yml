name: Deploy

on:
  push:
    branches: [ "main" ]

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare image name
        id: prep
        run: |
          IMAGE_ID=ghcr.io/$(echo "$GITHUB_REPOSITORY" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
          echo "TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_ID }}:${{ env.TAG }}
            ${{ env.IMAGE_ID }}:latest

      - name: Deploy to Hetzner via SSH
        uses: appleboy/ssh-action@v1.0.3
        env:
          IMAGE_ID: ${{ env.IMAGE_ID }}
          TAG: ${{ env.TAG }}
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        with:
          host: ${{ secrets.HETZNER_HOST }}
          username: ${{ secrets.HETZNER_USER }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          script: |
            set -e
            if [ -n "${GHCR_USERNAME}" ] && [ -n "${GHCR_TOKEN}" ]; then
              echo "${GHCR_TOKEN}" | docker login ghcr.io -u "${GHCR_USERNAME}" --password-stdin
            fi
            docker pull "$IMAGE_ID:latest" || docker pull "$IMAGE_ID:$TAG"
            docker stop cblog || true
            docker rm cblog || true
            docker run -d --restart unless-stopped --name cblog -p 127.0.0.1:8080:8080 "$IMAGE_ID:latest"

